pipeline {
  environment {
    registry = "awassink/docker-test"
    registryCredential = "dockerhub"
  }
  agent {
    kubernetes {
      //cloud 'kubernetes'
      label 'music-app-agent'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  name: kaniko
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug-539ddefcae3fd6b411a95982a830d987f4214251
    imagePullPolicy: Always
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
      - name: docker-config
        mountPath: /kaniko/.docker
  - name: maven
    image: maven:3.6.0-jdk-8-alpine
    imagePullPolicy: Always
    command:
    - cat
    tty: true
  volumes:
    - name: docker-config
      configMap:
        name: docker-config
"""
    }
  }

  stages {
    stage('Build application') {
      steps {
        container (name: 'maven') {
          // Get some code from a GitHub repository
          git branch: 'jenkins', url: 'https://github.com/awassink/music-demo-app.git'

          // Run Maven on a Unix agent.
          sh "cd backend; mvn clean package"
        }
      }

      post {
        // If Maven was able to run the tests, even if some of the test
        // failed, record the test results and archive the jar file.
        success {
          archiveArtifacts 'backend/target/*.war'
        }
      }
    }
    stage('Building image') {
      steps{
        container(name: 'kaniko') {
          sh '''
          cd backend
          /kaniko/executor --dockerfile Dockerfile --context `pwd` --no-push
          '''
        }
      }
    }
  }
}