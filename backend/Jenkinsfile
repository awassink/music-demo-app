pipeline {
  environment {
    registry = "awassink/docker-test"
    registryCredential = "dockerhub"
  }
  agent {
    kubernetes {
      //cloud 'kubernetes'
      label 'mypod'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  name: kaniko
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug-539ddefcae3fd6b411a95982a830d987f4214251
    imagePullPolicy: Always
    command:
    - /busybox/sh
    tty: true
    volumeMounts:
      - name: docker-config
        mountPath: /kaniko/.docker
  volumes:
    - name: docker-config
      configMap:
        name: docker-config
"""
    }
  }

  tools {
    // Install the Maven version configured as "M3" and add it to the path.
    maven "M3"
  }

  stages {
    stage('Build application') {
      steps {
        // Get some code from a GitHub repository
        git 'https://github.com/awassink/music-demo-app.git'

        // Run Maven on a Unix agent.
        sh "cd backend; mvn clean package"
      }

      post {
        // If Maven was able to run the tests, even if some of the test
        // failed, record the test results and archive the jar file.
        success {
          archiveArtifacts 'backend/target/*.war'
        }
      }
    }
    stage('Building image') {
      steps{
        script {
          System.setProperty("org.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS", "true");
          container(name: 'kaniko') {
            sh '''
            /kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=204321321492.dkr.ecr.us-west-2.amazonaws.com/mucis-app-be:latest --destination=123456789498.dkr.ecr.us-west-2.amazonaws.com/mucis-app-be:v$BUILD_NUMBER
            '''
          }
        }
      }
    }
  }
}